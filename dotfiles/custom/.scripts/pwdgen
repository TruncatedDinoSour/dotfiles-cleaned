#!/usr/bin/env bash

main() {
    rm -f /tmp/.pwdgen_random_bytes

    if [ ! "$1" ]; then
        local max_length="$(((RANDOM + 1) % 384))"
    else
        local max_length="$((($1 + 1) + RANDOM % 6))"
    fi

    local rng="$((((50 + RANDOM) % "$((max_length + 1))") + 1))"

    dd if=/dev/urandom of=/tmp/.pwdgen_random_bytes bs=1 count="$rng" status=none
    date '+%N%S%N%u%V%N%y%Y%m%G%I%m%N%s%N' >>/tmp/.pwdgen_random_bytes
    cat -A /bin/wc |
        head -n "$(((RANDOM + 2) % 22))" |
        sed 's/./&\n/g' |
        shuf |
        tr -d "\n" >>/tmp/.pwdgen_random_bytes

    id="${RANDOM}$(lsblk -fa | rev | sha512sum | base64 | sha512sum | rev;
    date '+%N%S%N%u%V%N%y%Y%m%G%I%m%N%s%N' | sha512sum;
    ip a | rev | base64 | sed 's/w/G/g; s/o/M/g; s/=//g' | md5sum;
    which "$SHELL" | base32 | rev;
    env | rev | base64 | sed 's/w/G/g; s/o/M/g; s/=//g' | sha256sum;
    ps aux | sha256sum | base64 | rev;
    ss | sha384sum | rev;
    w | xz -z -9 -e -f -c -T0 --no-adjust | sha512sum)${RANDOM}"

    echo "$id" | rev >>/tmp/.pwdgen_random_bytes
    echo "$@" >>/tmp/.pwdgen_random_bytes

    local bytes
    bytes="${RANDOM}$(cat -A /tmp/.pwdgen_random_bytes)${id}${RANDOM}"
    bytes="$(echo -n "$bytes" |
        sed 's/./&\n/g' |
        shuf |
        tr -d "\n" |
        rev)"

    rm -f /tmp/.pwdgen_random_bytes

    echo -en "${RANDOM}$((((RANDOM + 3) / (max_length + rng + 83)) + 7 * max_length ^ WINDOWID))${bytes}${COLUMNS}${max_length}${id}${RANDOM}\
        $(date '+%N%S%N%u%V%N%y%Y%m%G%I%m%N%s%N')${bytes,,}$(ls /usr/bin)${WINDOWID}${PS1}${RANDOM}" |
        base64 -w 0 --ignore-garbage |
        sed 's/O/k/g; s/=/{/g; s/U/s/g; s/4/%/g; s/G/O/g; s/g/4/g; s/s/p/g; s/T/=/g; s/R/*/g' |
        base32 -w 0 --ignore-garbage |
        sha512sum |
        rev |
        base64 -w "$rng" |
        gzip -f -9 |
        lz4 -c -7 --no-content-size -BD -z |
        xz -z -9 -e -f -c -T0 --no-adjust --block-size="$((RANDOM % 50))" --no-warn |
        bzip2 -3 -z -f |
        base64 -w "$((RANDOM % 48))" --ignore-garbage |
        sed 's/5/p/g; s/e/G/g; s/c/5/g; s/b/c/g; s/c/H/g; s/9/e/g' |
        base64 -w 0 --ignore-garbage |
        sed 's/_/O/g; s/d/_/g; s/A/@/g; s/E/:/g' |
        echo "$(cat -)$(echo "$bytes" | rev)" |
        sed 's/./&\n/g' |
        shuf |
        base64 -w "$((RANDOM % rng))" --ignore-garbage |
        cat - /dev/urandom |
        head -n "$((rng ** 2))" |
        base64 |
        sha512sum |
        tr -d "\n" |
        base64 -w 8 |
        base64 -w 0 --ignore-garbage |
        rev |
        tail --bytes="$((30 + rng + (((RANDOM + 1) % max_length) - 20)))" |
        sed 's/\//f/; s/=//g; s/8/u/g; s/p/*/g; s/U/%/g; s/f/-/g; s/s/@/g; s/y/+/g' |
        sed 's/e/&/g; s/O/./g; s/W/~/g; s/m/\\/; s/~/l/g; s/9/$/; s/o/:/g; s/K/`/g' |
        awk '{ print $1 }' |
        sed 's/./&\n/g' |
        shuf |
        tr -d "\n" |
        rev

    [[ "$2" != "-n" ]] && echo
    return 0
}


main "$@"

