#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""free openai api"""

import hashlib
import sys
from time import time
from typing import Any

import cloudscraper  # type: ignore

API: str = "https://ai.ls/api/generate"

# _astro/Generator.<..>.js @ digestMessage(r) ( L71566 )
# and generateSignature ( L71573 ) ( this one has the key )
KEY: str = "Na3dx_(?qx32l}ep?#:8:mo44;7W\\2W.:nxm"


def sign(msg: str, t: int) -> str:
    return "".join(
        format(x, "02x")
        for x in hashlib.sha256(f"{t}:{msg}:{KEY}:{len(msg)}".encode()).digest()
    )


def message(msg: str) -> dict[str, Any]:
    msg = msg.encode("unicode_escape").decode()
    t: int = round(time() * 1000)

    return {
        "messages": [{"role": "user", "content": msg}],
        "time": t,
        "pass": None,
        "sign": sign(msg, t),
    }


def main() -> int:
    """Entry/main function"""

    if len(sys.argv) < 2:
        print("no input nor `-` specified ( to read from stdin )", file=sys.stderr)
        return 1

    if sys.argv[1] == "-":
        print("reading from stdin ...", file=sys.stderr)
        sys.argv[1] = sys.stdin.read()
        print("read", file=sys.stderr)

    prompt: str = " ".join(sys.argv[1:]).strip()

    if not prompt:
        return 2

    print(
        cloudscraper.CloudScraper(browser="chrome").post(API, json=message(prompt)).text
    )

    return 0


if __name__ == "__main__":
    assert main.__annotations__.get("return") is int, "main() should return an integer"
    raise SystemExit(main())
